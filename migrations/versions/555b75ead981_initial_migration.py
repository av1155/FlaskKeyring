"""Initial migration

Revision ID: 555b75ead981
Revises: 
Create Date: 2024-01-03 19:52:39.178382

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "555b75ead981"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("passwords", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True
        )
        batch_op.alter_column(
            "website",
            existing_type=sa.TEXT(),
            type_=sa.String(length=255),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "username",
            existing_type=sa.TEXT(),
            type_=sa.String(length=100),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "password",
            existing_type=sa.TEXT(),
            type_=sa.String(length=200),
            existing_nullable=False,
        )

    with op.batch_alter_table("reset_tokens", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True
        )
        batch_op.alter_column(
            "token",
            existing_type=sa.TEXT(),
            type_=sa.String(length=100),
            existing_nullable=False,
        )

    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.alter_column(
            "id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True
        )
        batch_op.alter_column(
            "username",
            existing_type=sa.TEXT(),
            type_=sa.String(length=100),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "password_hash",
            existing_type=sa.TEXT(),
            type_=sa.String(length=200),
            nullable=True,
        )
        batch_op.alter_column(
            "email",
            existing_type=sa.TEXT(),
            type_=sa.String(length=100),
            nullable=False,
        )
        batch_op.create_unique_constraint("uq_users_username", ["username"])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_constraint("uq_users_username", type_="unique")
        batch_op.alter_column(
            "email", existing_type=sa.String(length=100), type_=sa.TEXT(), nullable=True
        )
        batch_op.alter_column(
            "password_hash",
            existing_type=sa.String(length=200),
            type_=sa.TEXT(),
            nullable=False,
        )
        batch_op.alter_column(
            "username",
            existing_type=sa.String(length=100),
            type_=sa.TEXT(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True
        )

    with op.batch_alter_table("reset_tokens", schema=None) as batch_op:
        batch_op.alter_column(
            "token",
            existing_type=sa.String(length=100),
            type_=sa.TEXT(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True
        )

    with op.batch_alter_table("passwords", schema=None) as batch_op:
        batch_op.alter_column(
            "password",
            existing_type=sa.String(length=200),
            type_=sa.TEXT(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "username",
            existing_type=sa.String(length=100),
            type_=sa.TEXT(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "website",
            existing_type=sa.String(length=255),
            type_=sa.TEXT(),
            existing_nullable=False,
        )
        batch_op.alter_column(
            "id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True
        )

    # ### end Alembic commands ###
